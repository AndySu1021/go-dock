# syntax version.
version: "3.7"

services:
  nginx:
    container_name: nginx
    image: nginx:1.16.1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites:/etc/nginx/conf.d
      - ../cs-api:/cs-api
    restart: always
    networks:
      - backend

  workspace:
    container_name: workspace
    image: bitnami/golang:1.18.2
    tty: true
    ports:
      - 8083:8082
    volumes:
      - ../:/work
    restart: always
    networks:
      - backend

  mysql:
    container_name: mysql
    image: mysql:8.0.29
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment: 
      MYSQL_ROOT_PASSWORD: abcd1234
      MYSQL_DATABASE: demo
      MYSQL_USER: admin
      MYSQL_PASSWORD: abcd1234
    networks: 
      - backend
    volumes:
      - ./storage/mysql:/var/lib/mysql

  redis:
    container_name: redis
    image: redis:5.0.9-buster
    ports:
      - "6379:6379"
    stdin_open: true
    tty: true
    volumes:
      - ./storage/redis:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - backend

  mongo:
    container_name: mongo
    image: mongo:5
    restart: always
    ports:
      - 27017:27017
    volumes:
      - ./storage/mongo:/data/db
    networks:
      - backend

  prometheus:
    container_name: prometheus
    image: bitnami/prometheus:2.35.0
    volumes:
      - ./prometheus/config:/etc/prometheus
      - ./prometheus/data:/prometheus
    ports:
      - 9090:9090
    networks:
      - backend

  grafana:
    container_name: grafana
    image: grafana/grafana:8.5.3
    restart: unless-stopped
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=pass
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - 3000:3000
    networks:
      - backend

  etcd:
    container_name: etcd
    image: bitnami/etcd:3.5
    environment:
      - "ETCDCTL_API=3"
      - "ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379"
      - "ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379"
      - "ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380"
      - "ETCD_INITIAL_ADVERTISE_PEER_URLS=http://0.0.0.0:2380"
      - "ALLOW_NONE_AUTHENTICATION=yes"
      - "ETCD_INITIAL_CLUSTER=node1=http://0.0.0.0:2380"
      - "ETCD_NAME=node1"
      - "ETCD_DATA_DIR=/opt/bitnami/etcd/data"
    volumes:
      - ./etcd/etcd.conf.yml:/opt/bitnami/etcd/conf/etcd.conf.yml
      - ./etcd/data:/opt/bitnami/etcd/data
    ports:
      - 2379:2379
      - 2380:2380

  fluentd:
    build: 
      context: ./fluentd
    container_name: fluentd
    volumes:
      - ./fluentd/conf:/fluentd/etc
      - ./fluentd:/fluentd/log
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    networks:
      - backend

networks:
  backend:
    driver: bridge
